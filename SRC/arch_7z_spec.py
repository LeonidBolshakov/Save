import subprocess
from pathlib import Path
import sys
import os
import logging

logger = logging.getLogger(__name__)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–≥–≥–µ—Ä –ø–æ –∏–º–µ–Ω–∏ –º–æ–¥—É–ª—è


class Arch7zSpec:
    """
    –ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–º –∞—Ä—Ö–∏–≤–æ–º 7z.
    –°–ø–µ—Ü–∏—Ñ–∏–∫–∞ –∞—Ä—Ö–∏–≤–∞:
    1. –§–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Å–∞–º–æ—Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞—é—â–µ–π—Å—è –∞—Ä—Ö–∏–≤.
    2. –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º—ã–µ —Ñ–∞–π–ª—ã –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤, –∑–∞–ø–∏—Å–∞–Ω–Ω–æ–≥–æ –≤ —Ñ–∞–π–ª.
    """

    def __init__(
            self,
            arch_path: str,
            list_file: str,
            seven_zip_path: str,
            password: str = "",
            work_dir: str | None = None,
    ):
        """
        :param arch_path: (str) –ü—É—Ç—å –∫ –∞—Ä—Ö–∏–≤—É
        :param list_file: (str) –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å–æ–¥–µ—Ä–∂–∞—â–µ–º—É —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
        :param seven_zip_path: (str). –ü—É—Ç—å –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º—É 7z
        :param password: (str) –ü–∞—Ä–æ–ª—å. –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
        :param work_dir: (str): –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è. –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
        """
        self.password = password
        self.arch_path = arch_path
        self.list_file = list_file
        self.seven_zip_path = seven_zip_path  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º—É 7z
        self.work_dir = work_dir or os.getcwd()  # –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

        logger.debug("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Arch7zSpec —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏")
        self.check_all_params()

    def check_all_params(self):
        """–ö–æ–Ω—Ç—Ä–æ–ª—å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ–±—ä–µ–∫—Ç–∞"""
        self.check_arch()
        self.check_list_file()

    def check_arch(self):
        """–ö–æ–Ω—Ç—Ä–æ–ª—å –∞—Ä—Ö–∏–≤–∞"""

        # 1. –£–¥–∞–ª—è–µ–º –∞—Ä—Ö–∏–≤, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if self.arch_path:
            arch_path = Path(self.arch_path)
        else:
            logger.error("–ó–∞–¥–∞–Ω–æ –ø—É—Å—Ç–æ–µ –∏–º—è –∞—Ä—Ö–∏–≤–∞")
            raise ValueError(f"–ó–∞–¥–∞–Ω–æ –ø—É—Å—Ç–æ–µ –∏–º—è –∞—Ä—Ö–∏–≤–∞")

        if arch_path.exists():
            if arch_path.is_file():
                logger.warning(
                    "–§–∞–π–ª –∞—Ä—Ö–∏–≤–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –±—É–¥–µ—Ç —É–¥–∞–ª—ë–Ω: %s", arch_path
                )
                arch_path.unlink()
            else:
                logger.error("–°—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –∏–º–µ–Ω–µ–º –∞—Ä—Ö–∏–≤–∞: %s", arch_path)
                raise FileExistsError(
                    f"—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {arch_path}, –∏–º—è –∫–æ—Ç–æ—Ä–æ–π, —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∏–º–µ–Ω–µ–º –∞—Ä—Ö–∏–≤–∞. –ê—Ä—Ö–∏–≤–∞—Ü–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞."
                )

        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
        if arch_path.suffix != ".exe":
            logger.error("–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∞—Ä—Ö–∏–≤–∞: %s", arch_path.suffix)
            raise ValueError(
                f"–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –∞—Ä—Ö–∏–≤–∞ {arch_path} –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å exe. –ê—Ä—Ö–∏–≤ c–∞–º–æ—Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞—é—â–∏–π—Å—è"
            )

    def check_list_file(self):
        """–ö–æ–Ω—Ç—Ä–æ–ª—å –∏–º–µ–Ω–∏ —Å–ø–∏—Å–∫–∞ –∞—Ä—Ö–∏–≤–∏—Ä—É–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–ø–∏—Å–æ–∫ –∞—Ä—Ö–∏–≤–∏—Ä—É–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
        file_name = Path(self.list_file)
        if not file_name.exists():
            logger.error("–ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª —Å–ø–∏—Å–∫–∞ –¥–ª—è –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏: %s", file_name)
            raise FileNotFoundError(
                f"–í –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö –∑–∞–¥–∞–Ω –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª —Å–ø–∏—Å–∫–∞ –¥–ª—è –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏ - {file_name}"
            )
        logger.debug("–§–∞–π–ª —Å–ø–∏—Å–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: %s", file_name)

    def make_archive(self) -> bool:
        """
        –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã, —Å–ø–∏—Å–æ–∫ –∫–æ—Ç–æ—Ä—ã—Ö –ø–µ—Ä–µ–¥–∞–Ω.
        :return: True - –∞—Ä—Ö–∏–≤–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, False - –∞—Ä—Ö–∏–≤–∞—Ü–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞.
        """

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É –¥–ª—è –≤—ã–≤–æ–¥–∞
        encoding = "cp866" if sys.platform == "win32" else "utf-8"

        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—É 7z
        cmd = [
            self.seven_zip_path,
            "a",  # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –≤ –∞—Ä—Ö–∏–≤
            *(
                [f"-p{self.password}"] if self.password else []
            ),  # –ï—Å–ª–∏ –ø–∞—Ä–æ–ª—å –Ω–µ –∑–∞–¥–∞–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è
            "-mhe=on",  # –ï—Å–ª–∏ –∑–∞–¥–∞–Ω –ø–∞—Ä–æ–ª—å —à–∏—Ñ—Ä–æ–≤–∞—Ç—å –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤
            "-sfx",  # –°–æ–∑–¥–∞–≤–∞—Ç—å —Å–∞–º–æ—Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞—é—â–∏–π—Å—è —Ñ–∞–π–ª
            self.arch_path,
            f"@{self.list_file}",
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–æ–¥–∞–≤–ª–µ–Ω–∏—è –≤—ã–≤–æ–¥–∞
            "-bso0",  # –æ—Ç–∫–ª—é—á–∏—Ç—å –≤—ã–≤–æ–¥ –≤ stdout
            "-bsp0",  # –æ—Ç–∫–ª—é—á–∏—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        ]

        cmd_print = cmd.copy()
        cmd_print[2] = f"-p***************" if self.password else "–ü–∞—Ä–æ–ª—å –Ω–µ –∑–∞–¥–∞–Ω"
        # –ï—Å–ª–∏ –ø–∞—Ä–æ–ª—å –Ω–µ –∑–∞–¥–∞–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è
        logger.info("–ó–∞–ø—É—Å–∫ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏: %s", cmd_print)

        try:
            process = subprocess.run(
                cmd,
                stdout=subprocess.DEVNULL,
                stderr=subprocess.PIPE,
                encoding=encoding,
                errors="replace",  # –ê–≤—Ç–æ–∑–∞–º–µ–Ω–∞ –Ω–µ—á–∏—Ç–∞–µ–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                cwd=self.work_dir,  # –£–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏: {e}", file=sys.stderr)  # üî∏ –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥
            logger.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏")
            return False
        else:
            if process.returncode != 0:
                # –í—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
                print("–û—à–∏–±–∫–∞ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏:", file=sys.stderr)
                print(process.stdout, file=sys.stderr)
                print(process.stderr, file=sys.stderr)
                logger.error("–û—à–∏–±–∫–∞ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏. –ö–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞: %d", process.returncode)
                logger.error("stderr: %s", process.stderr)
                return False

            logger.info("–ê—Ä—Ö–∏–≤–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            return True
